{"ast":null,"code":"var _jsxFileName = \"/Users/amira/Desktop/kloudius-stopwatch/src/components/StopwatchForm/StopwatchForm.js\";\nimport React, { Component } from \"react\";\nimport { StopwatchContext } from \"../../contexts/StopwatchContexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass StopwatchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value,\n        error: \"\"\n      });\n    };\n    this.handleSubmit = e => {\n      const {\n        delay,\n        duration\n      } = this.state;\n      const {\n        startTimer\n      } = this.context;\n      const {\n        specialCharRegex\n      } = this;\n      if (!delay.trim() || !duration.trim()) {\n        this.setState({\n          error: \"Please enter a valid value for both fields.\"\n        });\n        return;\n      }\n      if (isNaN(delay) || isNaN(duration)) {\n        this.setState({\n          error: \"Please enter a valid number.\"\n        });\n        return;\n      }\n      if (specialCharRegex.test(delay) || specialCharRegex.test(duration)) {\n        this.setState({\n          error: \"Special characters are not allowed. Please use valid characters.\"\n        });\n        return;\n      }\n      startTimer(delay, duration);\n    };\n    this.state = {\n      delay: \"\",\n      duration: \"\",\n      error: \"\",\n      elapsedTime: 0\n    };\n    this.specialCharRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  render() {\n    const {\n      delay,\n      duration,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"delay\",\n        value: delay,\n        placeholder: \"Delay (Minutes to Start from Now)\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"duration\",\n        value: duration,\n        placeholder: \"Timer Duration\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: error\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start Counting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\nStopwatchForm.contextType = StopwatchContext;\nexport default StopwatchForm;","map":{"version":3,"names":["React","Component","StopwatchContext","jsxDEV","_jsxDEV","Fragment","_Fragment","StopwatchForm","constructor","props","handleInputChange","e","name","value","target","setState","error","handleSubmit","delay","duration","state","startTimer","context","specialCharRegex","trim","isNaN","test","elapsedTime","componentWillUnmount","clearInterval","timer","render","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","contextType"],"sources":["/Users/amira/Desktop/kloudius-stopwatch/src/components/StopwatchForm/StopwatchForm.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { StopwatchContext } from \"../../contexts/StopwatchContexts\";\n\nclass StopwatchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delay: \"\",\n      duration: \"\",\n      error: \"\",\n      elapsedTime: 0,\n    };\n\n    this.specialCharRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n  }\n\n  static contextType = StopwatchContext;\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value, error: \"\" });\n  };\n\n  handleSubmit = (e) => {\n    const { delay, duration } = this.state;\n    const { startTimer } = this.context;\n    const { specialCharRegex } = this;\n\n    if (!delay.trim() || !duration.trim()) {\n      this.setState({ error: \"Please enter a valid value for both fields.\" });\n      return;\n    }\n\n    if (isNaN(delay) || isNaN(duration)) {\n      this.setState({ error: \"Please enter a valid number.\" });\n      return;\n    }\n\n    if (specialCharRegex.test(delay) || specialCharRegex.test(duration)) {\n      this.setState({\n        error:\n          \"Special characters are not allowed. Please use valid characters.\",\n      });\n      return;\n    }\n    startTimer(delay, duration);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { delay, duration, error } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"delay\"\n          value={delay}\n          placeholder=\"Delay (Minutes to Start from Now)\"\n          onChange={this.handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"duration\"\n          value={duration}\n          placeholder=\"Timer Duration\"\n          onChange={this.handleInputChange}\n        />\n        {error && <>{error}</>}\n        <button type=\"submit\">Start Counting</button>\n      </form>\n    );\n  }\n}\n\nexport default StopwatchForm;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpE,MAAMC,aAAa,SAASN,SAAS,CAAC;EACpCO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAafC,iBAAiB,GAAIC,CAAC,IAAK;MACzB,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;MAChC,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACH,IAAI,GAAGC,KAAK;QAAEG,KAAK,EAAE;MAAG,CAAC,CAAC;IAC7C,CAAC;IAAA,KAEDC,YAAY,GAAIN,CAAC,IAAK;MACpB,MAAM;QAAEO,KAAK;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;MACtC,MAAM;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACC,OAAO;MACnC,MAAM;QAAEC;MAAiB,CAAC,GAAG,IAAI;MAEjC,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,CAAC,IAAI,CAACL,QAAQ,CAACK,IAAI,CAAC,CAAC,EAAE;QACrC,IAAI,CAACT,QAAQ,CAAC;UAAEC,KAAK,EAAE;QAA8C,CAAC,CAAC;QACvE;MACF;MAEA,IAAIS,KAAK,CAACP,KAAK,CAAC,IAAIO,KAAK,CAACN,QAAQ,CAAC,EAAE;QACnC,IAAI,CAACJ,QAAQ,CAAC;UAAEC,KAAK,EAAE;QAA+B,CAAC,CAAC;QACxD;MACF;MAEA,IAAIO,gBAAgB,CAACG,IAAI,CAACR,KAAK,CAAC,IAAIK,gBAAgB,CAACG,IAAI,CAACP,QAAQ,CAAC,EAAE;QACnE,IAAI,CAACJ,QAAQ,CAAC;UACZC,KAAK,EACH;QACJ,CAAC,CAAC;QACF;MACF;MACAK,UAAU,CAACH,KAAK,EAAEC,QAAQ,CAAC;IAC7B,CAAC;IAxCC,IAAI,CAACC,KAAK,GAAG;MACXF,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZH,KAAK,EAAE,EAAE;MACTW,WAAW,EAAE;IACf,CAAC;IAED,IAAI,CAACJ,gBAAgB,GAAG,wBAAwB;EAClD;EAkCAK,oBAAoBA,CAAA,EAAG;IACrBC,aAAa,CAAC,IAAI,CAACC,KAAK,CAAC;EAC3B;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEb,KAAK;MAAEC,QAAQ;MAAEH;IAAM,CAAC,GAAG,IAAI,CAACI,KAAK;IAE7C,oBACEhB,OAAA;MAAM4B,QAAQ,EAAE,IAAI,CAACf,YAAa;MAAAgB,QAAA,gBAChC7B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXtB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEK,KAAM;QACbiB,WAAW,EAAC,mCAAmC;QAC/CC,QAAQ,EAAE,IAAI,CAAC1B;MAAkB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFpC,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXtB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEM,QAAS;QAChBgB,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ,EAAE,IAAI,CAAC1B;MAAkB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EACDxB,KAAK,iBAAIZ,OAAA,CAAAE,SAAA;QAAA2B,QAAA,EAAGjB;MAAK,gBAAG,CAAC,eACtBZ,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAEX;AACF;AAzEMjC,aAAa,CAaVkC,WAAW,GAAGvC,gBAAgB;AA8DvC,eAAeK,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}